##############################
# function showLayoutsHelper
#############################
page << 'function showLayoutsHelper(s){
        var default_layout = \''+ (@parent_layout.nil? ? " " : @parent_layout) +'\';
        var selected_value = (s.value == null || s.value == "") ? default_layout : s.value;

        //new array for layouts help
        var layouts = new Array(' + (@definition.length + 1).to_s + ')
        var translation = new Array();'

for file in @definition
   params = get_layout_parameters(file)

   #if option_value has the same value as found inherited layout, we set a option_value to nil
   option_value = (params[0] == @parent_layout) ? @layout : params[0]

   #if current page has parent, but page layout was set to nil and option_value has the same value as found inherited layout
   #that means, this is inherited layout => we set prefix Inherited
   option_text = (!@parent_id.nil? and @layout.nil? and params[0] == @parent_layout) ? 'Inherited (' + params[1] + ')' : params[1]
   @user_layouts.push([option_text, option_value])

page << 'layouts[\'' + params[0] + '\'] = new Array(3);
             layouts[\'' + params[0] + '\'][\'name\'] = \'' + params[1] + '\';
             layouts[\'' + params[0] + '\'][\'description\'] = \'' + t("layouts.#{params[0]}.description") +'\';
             layouts[\'' + params[0] + '\'][\'page_parts\'] = ' + params[2].to_json + ';'

     unless params[2].nil?
        page << 'translation[\'' + params[0] + '\'] = new Array(' + params[2].length.to_s + ');';
     for p in params[2] do
        page << 'translation[\'' + params[0] + '\']["'"#{p}"'"] = \'' + t("layouts.#{params[0]}.parts.#{p}") + '\';'
     end
     end
end
page << ' var layout_help = document.getElementById(\'layout_details\');
              if(layout_help != null){
                var layout_message = "";
                var index = s.selectedIndex;
                var selected_text = s[index].text;
                var find = \'Inherit\';

               if(selected_text.search(find) != -1){
                    layout_message += "<p>'+t(:layout_is_inherited)+'<strong>"+layouts[selected_value][\'name\']+"</strong></p>";
                }

               if(!(layouts[selected_value][\'description\'] == null || layouts[selected_value][\'description\'] == "" )){
                    layout_message += "<h3>" + layouts[selected_value][\'description\'] + "</h3>";
               }

                if(!(layouts[selected_value][\'page_parts\'] == null || layouts[selected_value][\'page_parts\'] == "" )){
                    layout_message += "' + t(:layout_help_title) + '";
                    layout_message += "<ul>";

                    var layout_pp = layouts[selected_value][\'page_parts\'];
                    for(i=0; i < layout_pp.length; i++) {
                        layout_message += "<li><strong>" + layout_pp[i] +" "+ "</strong>" + " " + translation[selected_value][layout_pp[i]] + "</li>";
                }
                layout_message += "</ul>";
            }

            layout_help.innerHTML =  layout_message;
            /*hack for IE */
            if(navigator.appName == "Microsoft Internet Explorer")
                layout_help.style.display=\'block\';
            else
                layout_help.blindDown();
        }

}'

